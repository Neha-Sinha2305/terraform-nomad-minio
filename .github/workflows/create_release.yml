name: Release
on:
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, reopened, edited, closed ]

jobs:
  release-prerequisites:
    if: |
      contains(github.event.pull_request.labels.*.name, 'major') ||
      contains(github.event.pull_request.labels.*.name, 'minor') ||
      contains(github.event.pull_request.labels.*.name, 'patch')
    runs-on: macos-latest
    outputs:
      bump: ${{ steps.bump.outputs.match }}
      next_version: ${{ steps.next_version.outputs.version }}
      current_version: ${{ steps.current_version.outputs.VERSIO }}
      log_entry: ${{ steps.changelog_reader.outputs.log_entry }}

    steps:
      - uses: actions/checkout@v2
      - id: current_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Require PR label (major/minor/patch)
        id: bump
        uses: zwaldowski/match-label-action@v1
        with:
          allowed: major,minor,patch

      - id: next_version
        uses: zwaldowski/semver-release-action@v1
        with:
          dry_run: true
          bump: ${{ steps.bump.outputs.match }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Find and replace
        run: python .github/action/find-replace.py
        env:
          FIND: "'"
          REPLACE: "'\\''"
          FILE_TO_MODIFY: CHANGELOG.md

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v1.1.0
        with:
          version: ${{ steps.next_version.outputs.version }}
          path: CHANGELOG.md

  release:
#    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    needs:
      - release-prerequisites

    runs-on: macos-latest
    steps:
      - name: Create Release on github
        id: create_release
        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.release-prerequisites.outputs.next_version }}
          release_name: Release v${{ needs.release-prerequisites.outputs.next_version }}
          body: |
            ${{ needs.release-prerequisites.outputs.log_entry }}
          draft: false
          prerelease: false

        - name: Print Id of the newly created issue
          run: echo "hello you"

#      - name: Create follow up issue to update minio-module version in other modules that use it
#        uses: maxkomarychev/oction-create-issue@v0.7.1
#        id: create_issue
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          title: "[Test issue for verifying github action] Update minio module to match the latest release version"
#          body: "Update minio-module version in the following repos: https://github.com/fredrikhgrelland/terraform-nomad-presto\nhttps://github.com/fredrikhgrelland/terraform-nomad-hive"
#
#      - name: Print Id of the newly created issue
#        run: echo ${{ steps.my_step_id.create_issue.number }}